----------------------------------------------EC2-----------------------------------------------------------------------------------
Elastic Compute Cloud
EC2 instances are virtual server
billed by second
EC2 service provisioned EC2 instances/virtual servers
creates and manage life cycle of EC2 instances,
load balancing and auto-scaling ,
attach storage
manage network

Security Group
is like a Virtual Firewall having inbound/outbound rules

Instance Types
compute CPU,GPU

t2.micro
t is instance family (t is General purpose instance)
2 is generation 
micro size
Family Generation Size

nano<micro<small<medium<large<xlarge

1) Change Region to   (close to ur location)
Asia Pacific (Mumbai) ap-south-1

2) EC2 --> Create instances

3) AMI Amazon Machine Image
Amazon Linux 2 AMI (HVM), SSD Volume Type	

3) Subnet = AZ (select AZ)


4) Security Group
my-EC2-security-group	

5) create new keypair file
and download EC2-keypair.perm at 
C:\Users\AliImran\Box Sync\P52\My-Learning\My-AWS\Architect\in28Minutes-AWS\LABS

used for ssh 
Name Tag is visible on the UI

6) Connect
EC2 Instance Connect (browser-based SSH connection)

cmd
whoami
python --version

6) Security Group 
Add

HTTP
AnyWhere

**All ICMP ipv4  (used for ping public ip)
AnyWhere


7)
Open Command Prompt
cd C:\Users\AliImran\Box Sync\P52\My-Learning\My-AWS\Architect\in28Minutes-AWS\LABS
ssh -i "ec2-keypair.pem" ec2-user@ec2-13-234-77-166.ap-south-1.compute.amazonaws.com


SSH is used to control a machine remotely from a command line

--------  SSH via Max or Linux or windows using Power shell
terminal
chmod 0400  downloadedPemFile.pem
for windows add your user to key file in Advance and remove inheritance and others in Permissions  with full control
ssh  -i downloadedPemFile.pem  ec2-user@EC2-public-ip 
exit

-------- SSH via Windows
open puttyGen
file-Load private key
give downloadedPemFile.pem
Save private key
downloadedPemFile.ppk
Open Putty
Connection --SSH-Auth-Private key file and give .ppk
hostname: ec2-user@EC2-public-ip 

-------EC2 instance Connect
Using browser
*** will not work if 22 is not allowed in SG

8) 
sudo su
yum update -y
yum install httpd
systemctl start httpd
systemctl enable httpd
echo "Hello World" > /var/www/html/index.html


curl -s http://13.234.77.166/latest/dynamic/instance-identity/document > /var/www/html/index.html

1) EC2 instance metadata service 
get details about EC2 instance

URL accessible within he EC2 instance only
http://url/lates/meta-data/

curl http://EC2-13-234-77-166.ap-south-1.compute.amazonaws.com/latest/meta-data/ami-id/
curl http://13.234.77.166/latest/meta-data/hostname
curl http://13.234.77.166/latest/meta-data/instance-id
curl http://13.234.77.166/latest/meta-data/instance-type

curl -L http://13.234.77.166/latest/meta-data/

You can get
AMI Id
Storage  Devices
DNS hostname
instance id
instance type
security groups
IP addresses

2) dynamic data service

curl http://13.234.77.166/latest/dynamic
curl http://13.234.77.166/latest/dynamic/instance-identity
curl http://13.234.77.166/latest/dynamic/instance-identity/document


9) 

echo "EC2 Instance-2 with ($(whoami) ) on host ($(hostname)) with ip ($(hostname -i))" > /var/www/html/index.html

curl http://localhost/latest/dynamic/instance-identity/document > /var/www/html/index.html


Trouble shooting
EC2-keypair.pem is the private key
chmod 400 EC2-keypair.pem (read only to the owner)
as 0777(default , v open) not recommended
use public DNS or IP to connect 


for windows instances
1) private key
2) admin pwd
decrypt the pwd using private key and login via RDP
3) Security group allow (otherwise timeout can probably come)
SSH 22
RDP 3389

*** EC2 uses public key cryptography using RSA
public key is stored in EC2 instance
private key is stored by customer

For putty
create ec2_instance1_KP.ppk using puttygen and coonect to EC2 instance


--------------- Security Group ---------------
defence in depth acting as firewall on EC2 instances
It live outside the EC2
SG are the fundamental of Network Security in AWS
They control how traffic is allowed into or out of EC2 Machines


** if there is no rules , no traffic is allowed 
* you can specific only ALLOW RULES , rest is not allowed by default
* can assign up to 5 security groups
* No restart is required for EC2
* Security Group are stateful , if outgoing/incoming is allowed, the incoming  response for it is automatically allowed
timeout in case of security group not allowed

Any instance can have multiple SG
A SG can be attached to multiple EC2
if application is not accessible (timed out, its SG Issue)
if application gives "connection refused" then its an app error

** All inbound traffic is BLOCKED by default
** All outbound traffic is Authorized by default

Referencing Other Security Groups 
*SG can reference other SG instead of IP ranges 

AZ are in is
this helps guarantee that multi AZ won't all fail at once (due to a meteorological disaster for example). 

"Organisations" does not exist in IAM
AM is a global service (encompasses all regions)

**  You pay for an EC2 instance compute component Only when it is in start state
 getting a permission error exception when trying to SSH into your Linux Instance
 The key is missing permissions chmod 0400
 
 SG can reference to 
 * IP address
 * CIDR block
 * Security Group
 
 * But not DNS  name
--------------------------------------------------------------------

EC2 IP Addresses

IPv4 allows 3.7 billion IP addresses 
Public address
internet addressable
No two machines can have same public IP

Private address
internal to the corporate network
IP is unique across the private network
two diff private networks can have same private IP
machine connect to www using internet gateway (a proxy)

** All EC2 instances are assigned to private IP address but public is not assigned automatically
** Stop/Start EC2 Public IP is changed but private is same and Elastic IP (if assigned)
** reboot will not change public IP

SG are specific to the Region and to the VPC

------------Elastic IP---------------------------------------------------------------------------------------------------------------------
** Constant IIP
Normally  where 1 instance is required it is ok
** Elastic IP is a public IPv4 IP you own as long as u don't delete it
*** You can attach it to one instance at a time
** Max 5 Elastic IP in your account (can request more)
Better use a random public IP and register a DNS to it

when we do SSH in EC2 we can't use private IP as we are not in the same network

ifconfig -a 

Go to EC2
Elastic IPs
Allocate an IP
Action --> Associate with instance
select instance --> Associate

Action --> Networking --> Disassociate Elastic IP

** Now in instance the public IP is associated with the elastic ip when instance is stopped even elastic IP is there 

*** Elastic IPs can  be switched to other EC2 instance within the SAME region
they need to be manually detached

*** If elastic ip is not in used or if EC2 instance associated with it is stopped  then u will be charged
better is to release the elastic IP

----------EC2 HTTP Server Setup--------------
user-data
script used at launch of the instance

bootstrapping 
(launching commands at machine startup) 
** run only once , it increase boot time and must use root user sudo is mandatory

*** install OS patches or software when EC2 instance is launched

Create another EC2 instance

Add below in the user data
#!/bin/bash
yum update -y
yum install httpd
systemctl start httpd
systemctl enable httpd
echo "EC2 Instance-2 with ($(whoami) ) on host ($(hostname)) with IP ($(hostname -i))" > /var/www/html/index.html

sudo su
yum update -y
yum install httpd
systemctl start httpd
systemctl enable httpd
echo "EC2 Instance-2 with ($(whoami) ) on host ($(hostname)) with IP ($(hostname -i))" > /var/www/html/index.html

cd C:\Users\AliImran\Box Sync\P52\My-Learning\My-AWS\Architect\in28Minutes-AWS\LABS
ssh -i "EC2-keypair.pem" ec2-user@EC2-35-154-93-55.ap-south-1.compute.amazonaws.com
cat /var/www/html/index.html

http://EC2-35-154-93-55.ap-south-1.compute.amazonaws.com

--------------- EC2 Hibernate  ---------------------------------
EC2 stop: data on Disk EBS is kept intact in next start
Terminate: EBS volume destroy

On Start Following happs:
First Start ; OS boot and EC2 user data scripts
App Start , cache gets warmed up

EC2 Hibernate 
RAM state is preserved in root EB volume must Encrypted
Instance boot is much faster
** Available for On demand and Reserved instances only
** cannot be hibernated more than 60 days
Specific instances families supported

--------------EC2 INSTANCE TYPES-----Launch Modes-----------

1) EC2 On Demand (come and stay at hotel room)
pay for what you use
billing per second, after first minute
** Highest cost but no upfront payment
No long term commitment
** recommended for shot term and un interrupted 
** ideal for spiky traffic 
** batch program having unpredictable time

2) EC2 Reserved Instances (planing ahead and long time)
up to 75% discount
** pay upfront with long term commitment
1 or 3 years
reserve a specific instance type
** recommanded for steady state usage apps (database)

a. Convertible Reserved Instance
** can change instance type
up to 54% discount

b. Scheduled Reserved Instances
** launch within time window 
when you require a fraction of day/week/month
its regional specific  


3) EC2  Spot Instances (bid for empty room )
** Cheapest up to 90% off But not guarantees compared  to on demand
Quote the max 
** ** Most Cost Efficient

define max spot price and get the instance while current spot price < max
You can cancel sport instance requests that are open,active or disabled state
Cancelling a spot requests does not terminate instances
**You must cancel a spot request First and then terminate the spot instances

spot request contains
max price
desired no. of instances
request type one-time or persistent
valid from , valid to

not for critical apps, non time-critical workloads
for batch jobs,data analytics which are resilient to failure
old-model = bid a price, biggest bidder wins
new model: quote your max price,based on long term trends
can a terminated with a 2 min notice
best practice: stop or hibernate instance on receiving interruption notice as for terminate a new instance will be allocated

Spot Fleet
Request spot instances across multiple instance types(micro,small,large)
to get better change to have a spot instance
*** Spot Fleet = set of spot instances + (optional) on demand instances
try to meet target capacity with price constraints
Define possible launch pools: instance type , OS, AZ
spot fleet stops launching instances when reaching capacity or max cost

Strategies to allocate Spot instances
LowestPrice: short workloads,  cost optimized
Diversified: great for availability , long workloads
CapacityOtimized: pool with optimal capacity for no. of instances

Spot Fleets allow us to automatically request spot instances with the lowest price

Spot Block
request spot instances for a specific duration (1 to 6 hrs)
without interruption


4) EC2 Dedicated Hosts (book entire building)
*** Most Expensive
** Physical Dedicated EC2 server for your use
Full control on instance placement
visibility to underlying sockets/physical cores 
allocated for 3 years
Recommanded for : complicated licencing model , BYOL, strong compliance requirements
per host billing

5) EC2 Dedicated Instances
instances running on hardware that is dedicated to you
per instance billing
may share hardware with other instances with same account
No control over instance placement

EC2 instance Families
www.ec2instances.info

r (r4,r5,r5a,r5n) Memory Ram  optimized
in mem db, real time analytics
in memory cache

c (c4,c5,c5n ) Compute optimised High performance
batch processing,High performance compute

m ( m4,m5,m6 General purpose)
web servers and code repos
medium , general/web app

i (i3,de)  storage optimised
NoSQL DB and data warehousing

g (g3,g4) GPU optimised 
video compression, graphic processing

t (t2,t3,t3a) 

BRUSTABLE INSTANCES performance
 (accumulated CPU  credits)
workload with spikes, dev env , small db
in case of spike , it can burst but it utilize "burst credits"

Unlimited mode 
(spike beyond CPU credit at additional costs) off for t2 but on for t3 by default
It is possible to have "unlimited brust credit balance" 
you pay extra money if you go over your credit balance, but you don't lose in performance


f  (f1) FPGA instances 
massive parallel processing power as geonomic, data analytics

inf (inf1) Machine learning ASIC instances
image,speech,nlp recognition 

----------------------------------------------Launch Template userdata-------------------------------------------------------

Use launch templates to automate instance launches, simplify permission policies, 
and enforce best practices across your organization. Save launch parameters in a template 
that can be used for on-demand launches and with managed services, including 
EC2 Auto Scaling and EC2 Fleet. Easily update your launch parameters by creating a 
new launch template version.

EC2 --> Launch templates --> Create launch template

Name
MyEC2Template

AMI
Amazon Linux 2 AMI (HVM), SSD Volume Type - ami-09a7bbd08886aafdf (64-bit x86) / ami-011abae98ef4c1bfa (64-bit Arm)

Instance Type
t2.micro

Keypair 
EC2-keypair

Security Group
my-EC2-security-group

userdata

#!/bin/bash
yum update -y
yum install -y httpd
systemctl start httpd
systemctl enable httpd
echo "EC2 Instance with ($(whoami) ) on host ($(hostname)) with IP ($(hostname -i))" > /var/www/html/index.html

Go to Instances
Launch Instance from template
Select MyEC2template

http://EC2-3-7-66-215.ap-south-1.compute.amazonaws.com/
EC2 Instance with (root ) on host (IP-172-31-14-110.ap-south-1.compute.internal) with IP (172.31.14.110)

http://EC2-13-233-53-139.ap-south-1.compute.amazonaws.com
EC2 Instance with (root ) on host (IP-172-31-13-231.ap-south-1.compute.internal) with IP (172.31.13.231) 


----------------------------------------------Customised AMI-------------------------------------------------------
AMI can be built for Linux or windows
Faster boot time
active directory out of box
installing your app ahead of time for faster deploy when auto scale
use some one else AMU
*AMI are built for a specific region
for installing OS patches and software using userdata at the launch of EC2 instance increases bootup time
also called Hardening an Image customised EC2 images to your ciporate securiyt standards)

AMI take space and live in S3 but can't see them in S3 console
you get charge for S3 space
By default your AMI are private
you can make AMI public and sahre with others AWS accounts or
sell over AWS marketplace
overall it is quite inexpensive to store private AMI

Select a running instance
Action - Image -- Create Image
Name
MyCusomizedEc2AMI

Create Image
Once Image is created go to

Go to AMI
Now Launch Template (template can have multiple version)
Action - Modify template
create new version  V2

Go to Template
Create instance from template
select V2

AMI Image contains
OS and software on that instances
have root volume also attach non root volumes
can be shared with other accounts (Permissions -- add account no.)
AMI are stored in S3 and are region specific, so can be created instances in AZs of that region
better to backup AMI in other regions for DR (Copy AMI to other regions)

Three AMI sources
1) by AWS
2) AWS market Place  Per hour billing
3) Customised AMI


AMI - Action -- DeregisterAMI
SnapShot- Action- Delete


If you stopped EC2 instances then still EBS volumes (hard disk) will be there and u will be charged


You can share AMI with another AWS account
owner must grant u read permission for storage either EBS snapshot
or S3 bucket
You can't copy an encrypted AMI unless keys were shared
**You can't copy an AMI with an associated billingProdut code shared
with you from another account.to copy shared AMI with billingProduct ,
launch an EC2 instance in your account using shared AMI and then 
create AMI from that instance.

sharing AMI doesn't affect ownership of AMI

**AMI is region locked and Same Id can't be used across regions
**Creating an AMI after installing the applications allows you to start more EC2 instances directly from that AMI, hence bypassing the need to install the application (as it's already installed)

------------------------Placement Groups-------------------
Use placement groups to influence the placement of a group of interdependent instances


Add instance to placement group = checked

1) Cluster
low latency network communication (instances on a same RAC),
in single AZ
** good for high performance computing
same hardware
Not available for t2 types
Big data Analysis

***  Pros: Great Network 10Gbps
Cons: Rack fail, all instances failed
Use Case: Big data jobs to complete v fast

2) Partition
create multiple partitions across multiple AZ
each partition is located on Separate AWS Racks
partitions are set of Racs
up to 7 partitions  per AZ and 100s of EC2 instance in a partition

A partition failure can affect many EC2 in it but won't affect other partitions
EC2 instances get access to the partition info as metadata
Use Case: Distributed jobs, HDFS, hadoop , kafka, cassandara, Big data jobs to complete v fast

3) Spread
high availability (instance on diff RAC)
Each instance is located in a separate rack in diff AZ
High resiliency
*** Critical applications

Pros: Reduced risk in simultaneous failure
Cons: 7 instances per AZ per placement group
Use Case: Apps need High Availability
where each instance must be isolated from failure from each other

ie 
AZ1
R11 - Intance1
R12 - Intance2
AZ2
R21 - Intance3

Create a Placement Group
Name: 
Strategy : Cluster

Launch Instance
Placement Group: Select my PG

-----------Elastic Network Interface ENI ------------------------------------------

It is logical component in VPC that represents a virtual network interface card
Primary ENI is by default and can't be detached

ENI lives in one subnet and thus in a single AZ
1 primary private IPV4 (eth0) and one or more secondary PV4 (eth1)
1 Elastic IPv4
1 public IPV4
One or more security group 
A mac address

** No. of EC2 instances = No. of ENI
You can create ENI independently and attach them on fly (move them)
on EC2 instances for failover thus new instance gets IP of old instnace
** ENI are bound to AZ

Also we can create our own ENI
Network Interfaces --> Create Network Interface
Desc: My Secondary ENI
Subnet:eu-west-1a
IPv4 Private IP: Auto assign
Security Group:

Right Click on that ENI --> Attach -- Select EC2 Instance Id
now it contains eth0 and eth1

A single EC2 instance can now be attached to two ENIs, each one on a distinct subnet. The ENI (not the instance) is now associated with a subnet.
Also can Detach it and Attach it to other instance as well
You would use the private network for SSH access, management, logging, and so forth. You can apply different security groups to each ENI so that traffic port 80 is allowed through the first ENI, and traffic from the private subnet on port 22 is allowed through the second ENI.

----------------------------------------------Good EC2 Scenarios------------------------------------------------------

Q1:  identify all instances belonging to a project, to an environment
SOL: tags

Q2: Change instance type
SOL: stop the instance and then change its type

Q3: don't want an EC2 instance to be automatically  terminated 
ie from Action-Instance Sate- Terminate
SOL: Change Termination Protection to Enable
also can be set during instance creation
But EC2 Terminal protection is not effective for termination from
1) Auto Scaling Groups (ASG)
2) Spot Instances
3) OS shutdown

Q4: Update EC2 instance to a new AMI with latest patches
SOL:create/relaunch a new instance with updated AMI

Q5: create EC2 instances based on on-premise VMs
SOL: yes, using import/export , you are responsible for licenses

Q6:Changing security group
SOL: easily change/delete 7) Papa AC=11000  + Car 8000 + Car Token 11013 group to an instance
multiple security group can also be assigned

Q7: Timeout
SOL:	inbound rule for security group to check

Q8: Installing a lot of software sing userdata that slowing down instance launch
how to make it faster
SOL:	custom AMI

Q9: stopped EC2 instance, will I get bill
SOL:	if u have storage 

Turn On Termination Protection to protect EC2 instances for termination
as this option will disable terminate menu

-------------------------Creating EC2 in different Zones--------------------------------------------------------------------------------------------------------

No. of Availability Zones in a Region = No. of subnets 

Services - VPC

A VPC is created default in every region

----------------------------Billing in AWS---------------------------------------------------------------------------------

1) Set Billing Alerts
2) Monitor Every day for first week
3)

My Account
IAM User and Role Access to Billing Information
Activate IAM Access

Billing Alerts
My Billing Dashboard
Billing Preference

CloudWatch

1) At the moment, CloudWatch displays all billing data and alarms in US East (N. Virginia)
so switch to it

2) Select Billing

3) Create Billing alert

4) create SNS topic
CloudWatch_Alarms_Topic

monitoring service and trigger alarm
create alarm
create topic

1) Go to to Budget
2) create a new budget 
Cost Budget
MonthlyBudget
3) Monthly
4) Budgeted amount 
$0.01
--------------------------------------------------------------------
SCALABILITY 
means an application can handle greater load

Horizontal
increase no. of instances
scale out: increase

Vertical
increase size of instance
t2.micro to t2.large
common to Non distributed databases
scale up/down

High Availability
run instances for the same application across multi AZ
