---------------------Route53---------------------------------------------------

Route53 is a managed DNS , a collection of rules and records which 
helps client understand how to reach a server through its domain name
* It is a Global Service 

Route53 = Domain Registrar + DNS
ie 
Buy your domain name
setup your DNS to route requests to domain to your hosted web site

Domain Name Server DNS
each record is associated with a TTL
how long is your mapping cached at the router at the client

Hosted Zone
Is a container for records containing DNS records routing traffic for a specific domain

Route53 can use 
public domains your own (routing on internet)
app1.mypublicdomain.com

private domain name that can be resolved by your instances in your VPC (routing with VPC)
app1.company.internal

Route53 can do
Load Balancing (through DNS called client load balancing)
Health Checks 
Routing Policies (simple, failover,...)

Not for free tier
you pay 0.05 $ per month per hosted zone

COMMON/ STANDARD DNS RECORDS

Type
A			: hostname to IPV4 address
AAAA	: hostname to IPV6 address
CNAME : hostname1 to hostname2 mapping  
Alias: hostname to AWS resource
NS	:  name server containing DNS records (name of hosted servers) 
MX    : Mail Exchange

eg     dumy.in28minutes.com to www.example.com

53 specific extension : Alias records

route traffic to select AWS resources like S3,ELB,CloudFront 
Alias records can be create for root and non root domains
ie in28minutes.com   or API.in28minutes.com
if you want to route domain to an AWS resource then what u need to make of 
use Alias records

** CNAME records only be created for non root domains 
The DNS protocol does not allow you to create a CNAME record for the top node of a DNS namespace (mycoolcompany.com), also known as the zone apex

Route 53 - Routing 
based on user requests
offer multiple routing policies

ie  users from US will route to ELB in us-east-1 and 
users from india will route to ELB in ap-south-1

ROUTE 53 POLICIES

1) Simple Routed Policy
maps a domain name to an IP address
use when you redirect to a single resource
You can't attach health checks to simple routing policy
if multiple values are returned , a random one is chosen by the client browser called client site load balancing

Record SetName: simple
Type:A
value : all public ips of EC2 there
TTL= 60 sec
Routing Policy = Simple
save record set
Now on EC2 instance
ping simple.stephenrheteacher will returns one of the public ip of EC2

2) Weighted Routed Policy
maps a single DNS name to multiple weighted resources, 10% to A, 30% to b (useful for Canary deployments)
eg. 
for a new app version only 1% available to users
helpful to split traffic b/w two regions
can be associated with health check

Record Set Name: weighted
Routing Policy = Weighted 
Weight : 10
Side ID : B

Routing Policy = Weighted 
Weight : 90
Side ID : B

weighted.learnaws.com

3) Latency Routed Policy
Users to AWS region
choose option with min latency
latency b/w host on internet can be change over time
provides u which region gives u low latency 
minimize response time
** Latency will evaluate the latency results and help your users get a DNS response that will minimize their latency (e.g. response time)

add IP address of EC2 with its associated region

Record Set Name: latency
Routing Policy = latency 
Region : 10
Side ID : A

latency guide based on nearest region

4) Failover Routed Policy
active passive failover , ie use DR is primary health check fails
If health check primary fails then requested will be routed to secondary only
health check is mandatory


5) Geolocation Routed Policy
choose based on user location
ie from Pakistan should go to this IP
should create create a "default" policy in case there is no match

Record Set Name: geo
Routing Policy = Geo Location 
Location : France

6) Multivalve answer
use when routing traffic to multiple resources
return multiple healthy records up to 8 random and then choose one of them by the browser

Record Set Name: multi
value: Ip address EC2
Routing Policy = Multi value health check
enable health check


Geoproximity Routed Policy
choose nearest resource (geographic distance) to ur user
Routing policies will route to the nearest resource by geographic distance to your user?


**record set for smallest geographic region has priority

use case:
restrict distribution of content to a specific area where u have distribution rights

recommenced to configure a default policy use if one of the location records match 
otherwise Rote 53 returns a " no answer"

WARNING! BILLING ALERT! HOSTED ZONES are NOT in FREE TIER

DNS Management

Console --> Route 53 
Domains --> Register Domains --> 12$ cost
 
Click on Hosted Zones
a hosted zone is a created 
Create Record Set
myfirstrecord
A-IP4v
value 11.22.33.44

Now myfirstrecord.stephenrheteacher.com goes to Route53 will redirect it to 11.22.33.44

nslookup myfirstrecord.stephenrheteacher.com will gives 11.22.33.44

Create a EC2 isnsatce and add user data into it
Amazon EC2 Instances have metadata they can access. 
They get it by accessing a web server on a link-local address, 169.254.169.254


#!/bin/bash
yum update -y
yum install -y httpd
systemctl start httpd.service
systemctl enable httpd.service
EC2_AVAIL_ZONE=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
echo "<h1>Hello World from $(hostname -f) in AZ $EC2_AVAIL_ZONE </h1>" > /var/www/html/index.html

It gives public IP = 3.112.71.34

So 3.112.71.34 will output 
Hello World from ip-172-31-42-165.ap-northeast-1.compute.internal in AZ ap-northeast-1a

So create 3 EC2 instances in different regions with above user data

Public IP   				Region
34.255.122.73			eu-west-1
3.86.116.186			us-east-1
3.112.71.34 			ap-northeast-1

Also create a ALB in eu-west-1 pointing to EC2 instance there

DNS Records TTL time to live

Web Browser --> DNS request to S3
S3 responded back IP and TTL
Browser cache the response 
Browser if TTL is valid then call the IP directly rather going to S3

High TTL 
24 hrs
less traffic on DNS
outdated records

Low TTL 
60 sec
More traffic on DNS
easy to change records

* TTL is mandatory for each DNS record

CNAME
hostname to hostname
AWS Resources LB,CloudFront exposes AWS hostname which you want
to be pointed by yourapp.yourdomain.com
** Only for Non root domain like yourapp.yourdomain.com and not yourdomain.com

create a Record set
Name: myapp.stephenrheteacher.com
Type:  CNAME
value : DNS name for my LB which points to EC2

ALIAS
hostname to AWS resources
points to a hostname to an AWS resource
** Works for both root and non root domain (sub domains)
** Free of charge
** native health check

create a Record set
Name: myAlias.stephenrheteacher.com (non root domain)
Type:  Alias
value : DNS name for my LB which points to EC2

create a Record set
Name: stephenrheteacher.com    (root domain)
Type:  Alias
value : DNS name for my LB which points to EC2

WARNING! BILLING ALERT! Delete the Hosted Zone and Terminate all EC2 Instances

HEALTH CHECKS
have health checks failed = unhealthy default 3
have health checks passed = healthy default 3
health check interval default = 30 sec
health checks can be linked to Route53 DNS queries

R3 -> Create Health Check
Name
Want to monitor : Endpoint
Endpoint by : Ip address
Protocol : Http
IP address: 3.112.71.34

now create other 2 health checks

Route53 as a Registrar
a domain registrar is an organisation that manages the reservation of internet
domain names
eg GoDaddy, google domains

Domain Registrar is not like DNS

If you buy your own domain on 3rd party website, you can still use Route53
1) create a hosted zone in Route53
A hosted zone tells Route 53 how to respond to DNS queries for a domain such as example.com. and its subdomains.

2) update NS record on 3rd party website to use Route 53 name server

Private hosted zones are meant to be used for internal network queries and are not publicly accessible. Public Hosted Zones are meant to be used for people requesting your website through the public internet. Finally, NS records must be updated on the 3rd party registrar. 

