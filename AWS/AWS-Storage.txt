------------------------------STORAGE----------------------------------------------------------------------------
Types of Storage 

1) Block Storage
hard disk
typical, one block storage device can be connected to one virtual server
can connect multiple different block storage devices to to one virtual server
Direct Attached Storage: like HD
Storage Area Network SAN
high speed network
connecting a pool of storage devices 
ie used by DB , oracle and SQL server

EBS
Amazon Elastic Block Store 
Instance store

2) File Storage
shared with multiple virtual servers
user need a  quick way to share files 
File Storage MANY to MANY Virtual Server
Amazon Elastic file server EFS (Linux instances)
Amazon Elastic file server EFx (Windows instances)
Amazon FSx for Luster (high performance use cases)


EC2 instance can be attached to 

1) instance stores
physical attached to EC2 instance (on the host computer where EC2 instances are availbe)
used for temporary data (ephemeral storage)
data lost when hardware/instance fail
life-cycle tied  to EC2 instance
used for cache or scratch files
data is not lost on instance reboot
only some ec2 instance types supports instance store

Advantages
v fast I/o
No extra cost 
ideal for storing temporary info

DisAdvantages
slow boot up up to 5 mins
Cannot take a snapshot or restore
Size is fixed based on instance type
cannot attach/detach to other EC2 instance

2) Elastic Block Store
Network Storage
Attached to EC2 instance as a network drive
More durable 
Life cycle not tied to EC2 instance
Provisioned capacity
Highly Flexible increase size when u need
Can be  attach/detach to other EC2 instance
999s availability and replicated within same AZ
UseCase: run your own database

root volume is where OS is stored and it is available by default
--------------
EC2 instance

EBS Instance A in AZ 	ap-south-1a - root volume
EBS Instance B in AZ     ap-south-1a - root volume and secondary volume
EBS Instance C in AZ     ap-south-1b root volume

name: EBS Instance A
region = ap-south-1
Add Storage:only root
Delete on Termination = yes  delete this root volume when EC terminates

name: EBS Instance B
region = ap-south-1
Add Storage: EBS 

name: EBS Instance C
region = ap-south-b
Add Storage: only root

*** Volumes in an availability zone CAN ONLY be attached to EC2 instances in the SAME AZ
A volume to be deleted needs to be first detached
But we can't detached a root volume


lsblk
xdva1 is mounted to /   (root)
cd / (we are on root vol)
xsvdb is not mounted yet

sudo file -s /dev/sdb (from console)

create a file system on xvdb and mount it 
sudo mkfs -t xfs  /dev/xvdb
sud o mkdir /data
sudo mount /dev/xvdb /data

cd /data
touch firstfileonebs.txt


cd  ..
sudo umount /data


Now disconnect a secondary vol from insatnce B and attach it to another ec2 A

Now open Instance A
No need to create the file system as it is already created

sudo file -s /dev/sdf
lsblk
sudo mkdir /data
sudo mount /dev/xvdf /data
cd /data
ls
firstfileonebs.txt

SSD Solid State Drive
Transactional workloads
recommended for boot volumes

HD Hard Disk Drive
Good at  small,random I/O
low cost
Large streaming or big data workloads
Not recommended for boot volumes


EBS SSD Types
*** IO performance increases with size
IOPS increases per GB upto a limit 

1) General Purpose SSD (gp2)
balance price and performance for transactional workloads

small/medium DB dev env

2) Provisioned IOPS SSD (io1)
low latency transactional workloads
large relational or nosql db
high performance at high cost

Lower latency refers to a minimal delay in the processing of computer data over a network connection.
Latency is the amount of time a message takes to traverse a computer network. It is typically measured in milliseconds

EBS HDD Types

1) Throughput Optimised HDD (st1)
Frequently accessed,
Throughput intensive sequential workloads
MapRequce,Kafka, log processing , DWH and ETL

2) Cold HDD (sc1)
lower cost
infrequent data access, eg very low transaction databases

Imp
196. Step 12 - Comparing Four EBS Storage Types

IOPS = input output operations per second
OPS (input/output operations per second) is the standard unit of measurement for the maximum number of reads and writes

I/O is the number of accesses to the dis
IOPS is I/O per second.
Throughput is the amount of info you read in each I/O

if you have a big mouth (big throughput), then you will need less bites and less I/O
Use cases:

Work loads -> usually General Purpose Volume
Databases -> usually IOPS (small data but frequently retrieved)
Big Data / Data warehouses -> usually Throughput ( big data files)
Cold HDD -> Cold File Servers (lowest IOPS before moving to Magnetic)

--------------- EBS SnapShot------------------------------------+
backup of EBS volume
volume can be modify
Volume type and size even it is attached with an EC2 instance

point-in-time snapshots (stored in S3) Aysnc process
Can't accessed directly from S3 but from EC2 API

Volumes- Action -Create snapshot
Can't add encryption here
We can crate a volume from this snapshot as well and can add encryption as well

Snapshots are incremental
You can create multiple snapshots of a volume snapshot1,snapshot2
but snapshot2 only have data after snapshot created and not the previous one
*** We can't loose data if we delete older snapshot
deleting snapshot only delete data which is not needed by other snapshots
snapshot can be shared with other accounts / public

Volumes are constrained to  AZs
Snapshots created from those volumes are constrained to regionals
so to move a volume to another Region, create
snapshot of it

Create a volume 
vol1  in eu-west-1a

Create snapshot from vol1
vol1-snapshot1

Select vol1-snapshot1 - Action - Copy

Fast Snap restore 
eliminates need for pre-warming ie accessing data soon from the volume
Snapshot - Action -  Manage FastSnapshot restore

EEBS Encryption

using AWS KMS
AES-256
Turning on encryption automatically encrypts

Data at rest
data vols, boot vols and snapshots
Data in Transit
b/w EC2 and EBS
b/w EBS and EBS snapshots

Enable encryption at 
When EC2 instance is created you can 
When copy a snapshot 
when copy an AMI

Getting faster I/O Performance b/w EC2 and EBS

1) Launch EC2 as EBS Optimised Instances
during instance creation

2) Enhanced networking through ENA Elastic Network Adapter
increase throughput
need custom configurations

3) using EFA Elastic Fabric Adapter
not available for windows
EFA= ENA + OD Bypass
High Performance Computing

EC2 Life Cycle

Hibernate  max 60 days
data in memory is persisted in EBS volume
only ebs backbend instances can be stopped or hibernated

Increase 

RAID
redundant array of independent disks

RAID 1
when higher \durability is required
data is duplicated

RAID 0
Higher IOPS or storage is required
issue is data  can be lost if one disk fail
use when I/O performance is more important

We can create AMI from a snapshot of a root volume

Scenario
1) use an AMI belonging to a different AWS account or in diff region
a) Owner of AMI provides read permission to AMI
b) for encrypted AMI, owner should share encryption keys
c)copy AMI to the other regions

If u don't have permissions to cipy AMI but have permission to use it 
Sol:  
create EC2 instance from that AMI 
create new AMI from EC2 instance and copy it 

2) Can I attach EBS volume in us-east-1a to EC2 instance in us-east-1b
No, it should be in SAME AZ as of EC2 instance

3) Attach multiple EBS volume to an EC2 instance
Yes

4) Attach an EBS volume to two EC2 instances (at the same time)
No

5) Switch EBS vol from EC2 to another Ec2
Yes, detach and attach

6) Will an EBS volume be immediately available when attached to an EC2 instance ?
Yes, however , by default data is lazily loaded

7) How to endure EBS vol is deleted when EC2 is terminated
Enable delete on termination

8) retain EBS vol even if EC2 backed instance fail
On termination all data on root is lost even if EBS backed
so detach EBS vol before terminating the instance and reover data by connecting 
it to another eC2 instance
use snapshot

9) How to Create EBS volume from EBS volume in diff AZ in same region
create snapshot
create EBS volume from that snapshot and select diff AZ

10) How to Create EBS volume from EBS volume in diff Region 
take a snapshot
copy snapshot to other region
create ebs volume in other region

11) Lowest cost option to maintain snapshots with EBS
store just latest snapshot and delete others

12) how to encrypt and un encrypted EBS vloume
can't do directly
create a snapshot from this volume
create vol from this snapshot with encryption

13) how to automate the complete lifecycle
creation, retention and deletion  of EBS snapshots
use EBS- Amazon Data LifeCycle Manager

--------------------------EFS--------------------------------------------------------
Elastic File System
Can attach a EFS with multiple EC2 (may be in diff Az ) but in a single Region
petabyte scale , auto scaling shared file system

In EBS for auto scaling , you need to provisioned disk and charge for it
In EFS just add files and changed for those files like S3

** Compatible with Amazon EC2 LINUX based instances
use Max I/O Mode for higher throughput (with small latency) 
use case: home dirs, file share, content mgmt, media workflows


Amazon FSX for Lustre
its a File system Optimised for Performance
HPC high performance computing
machine learning, media processing 
Integrates with S3
POSIX complicit
File system data is automatically encrypted at rest and in-transit


Amazon FSX Windows File Servers
fully managed windows file server
SMB service message block protocol
AD integration
File system data is automatically encrypted at rest and in-transit
*All File sharing options are accessible on AWS or on premises


Console - EFS - Create File system
it is associated with a specific VPC

select Security group : EC2 Security Group
to all mount targets

life cycle policy = optional

Throughput Mode
Bursting Mode for most file system
Provisioned

Performance Mode
General Purpose
Max I/O

File System Policy

Access Points
to provide application to access your filesystem

Sharing File System b/w EC2 instances

Edit EC2 Security Group for Inbound
NFS
Custom - EC2 Security Group
thus allow NFS from all EC2 instances with this SG

Mouting your File system

on each EC2 instance
sudo yum install -y amazon-efs-utils
sudo mkdir efs
sudo mount -t efs fs-a440c755:/ efs
cd /efs
sudo touch firstEFsFile.txt


Console --> FSX
use us-east-1

Make Optimum Use of Resources in The Cloud
Terminate EC2 instances
Delete all unused EBS volumes, snapshots
Delete all your AMIs
Delete your EFS file storage servers

-----------------------Storage Gateway -------------------------------------------------
Hybrid Storage  (On Premise and on Cloud )
Storage Gateway 
unlimited storage with good performance
Storage Gateway and S3 glacier encrypt data by default

three options
1) Storage File Gateway
2) Storage Tape Gateway
3) Storage Volume Gateway

VM Image with storage gateway software deployed on-premises

1) Storage File Gateway
File gateway deployed as VM on premises
maintains a local cache with most recently used objects
File share (NFS or SMB)  + It benefits from S3 features and integrations

2) AWS Storage Tape Gateway
used for archives
avoid physical tape backup manual process
no need to change tape backup infrastructure
backup data to virtual tapes ie S3 and glacier
S3 life cycle mgmt

3) Storage Volume Gateway
move block storage to cloud
reduce cost
mostly for backup and DR
migration of application data

Cache storage
primary data stored  at AWS S3
on premise cache store frequently accessed data

Volume Stored
High Performance
Primary data store at On premise
async copy to AWS
stored as EBS snapshots
for DR and restore EBS volumes

scenarios: want to use an AMI belonging to a diff AWS account or a diff Region
AMI are restricted to a region


File Storage used for HPC High performance computing  is Amazon FSx for Lustre
