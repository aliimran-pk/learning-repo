------------------------------STORAGE----------------------------------------------------------------------------
Types of Storage 

1) Block Storage
hard disk
* typical, one block storage device can be connected to one virtual server
can connect multiple different block storage devices to to one virtual server
Direct Attached Storage: like HD
Storage Area Network SAN
high speed network
connecting a pool of storage devices 
ie used by DB , oracle and SQL server

EC2 instances support two types for block level storage 
1) Amazon Elastic Block Store 
2) Instance store

2) File Storage
* shared with multiple virtual servers
user need a  quick way to share files 
File Storage MANY to MANY Virtual Server
Amazon Elastic file server EFS (Linux instances)
Amazon Elastic file server EFx (Windows instances)
Amazon FSx for Luster (high performance use cases)

EC2 instance can be attached to 

1) Instance stores

physical attached to EC2 instance (on the host computer where EC2 instances are availbe)
used for temporary data (ephemeral storage)
** data lost when hardware/instance fail or instance stop/terminate
life-cycle tied  to EC2 instance
used for cache or scratch files
data is not lost on instance reboot
only some ec2 instance types supports instance store
Boot time is slower then EBS backed volumes and usually less then 5 min


eg .c5 dlarge can have instance store

up to 7.5 TB
Advantages
v fast I/o
No extra cost 
ideal for storing temporary info

DisAdvantages
slow boot up up to 5 mins
Cannot take a snapshot or restore
Size is fixed based on instance type
cannot attach/detach to other EC2 instance
** Can't resize the instance store


2) Elastic Block Store (EBS)
** Network Storage (not a physical device)
Attached to EC2 instance as a network drive
More durable 
Life cycle not tied to EC2 instance
Provisioned capacity
Highly Flexible increase size when u need
Can be  attach/detach to other EC2 instance
999s availability and replicated within same AZ
EBS is locked to a AZ , to move volume across , you first need to snapshot it
UseCase: run your own database
Require network to communicate to the instance , means a little latency
We billed for provisioned capacity (GBs and IOPS)  and not for usage
root volume is where OS is stored and it is available by default
multiple volumes can be attached to an EC2 instance
EBS volumes preserve their data through instance stops and terminations, 
--------------
EC2 instance

EBS Instance A in AZ   ap-south-1a - root volume
EBS Instance B in AZ     ap-south-1a - root volume and secondary volume
EBS Instance C in AZ     ap-south-1b root volume

name: EBS Instance A
region = ap-south-1
Add Storage:only root
Delete on Termination = yes  delete this root volume when EC terminates

name: EBS Instance B
region = ap-south-1
Add Storage: EBS 

name: EBS Instance C
region = ap-south-b
Add Storage: only root

*** Volumes in an availability zone CAN ONLY be attached to EC2 instances in the SAME AZ

A volume to be deleted needs to be first detached
But we can't detached a root volume

lsblk (will show you all the attached drives)
xdva1 is mounted to /   (root)
cd / (we are on root vol)
xsvdb is not mounted yet

sudo file -s /dev/sdb (from console)

create a file system on xvdb and mount it 
sudo mkfs -t xfs  /dev/xvdb
sudo  mkdir /data
sudo mount /dev/xvdb /data (now )our 

cd /data
touch firstfileonebs.txt


cd  ..
sudo umount /data


Now disconnect a secondary vol from insatnce B and attach it to another ec2 A

Now open Instance A
No need to create the file system as it is already created

sudo file -s /dev/sdf
lsblk
sudo mkdir /data
sudo mount /dev/xvdf /data
cd /data
ls
firstfileonebs.txt

SSD Solid State Drive
Transactional workloads
recommended for boot volumes

HD Hard Disk Drive
Good at  small,random I/O
low cost
Large streaming or big data workloads
Not recommended for boot volumes


------ EBS SSD Types---------------
*** IO performance increases with size
IOPS increases per GB up to a limit 

1) General Purpose SSD (gp2)
cheap
balance price and performance for transactional workloads
small/medium DB dev env
recommended for most workloads
system boot volumes
virtual desktops
low latency interactive apps
1 GB - 16TB (16386 GB)
burst IOPS to 3000
Max IOPS 16000

** IOPS are decrease/increased with value of Size
3 IOPS per GB

2) Provisioned IOPS SSD (io1)
expensive
critical business application
more than 16000 IOPS per volume, max 32000
4GB to 16TB
low latency transactional workloads
large relational or nosql db
high performance at high cost

Lower latency refers to a minimal delay in the processing of computer data over a network connection.
Latency is the amount of time a message takes to traverse a computer network. It is typically measured in milliseconds

EBS HDD Types

1) Throughput Optimised HDD (st1)
Frequently accessed,
Throughput intensive sequential workloads
MapRequce,Kafka, log processing , DWH and ETL
500 GB - 16TB , 500 MB/s throughput

2) Cold HDD (sc1)
infrequent data access, eg very low transaction databases
lower cost
250 GB - 16TB , 250 MB/s

Imp
196. Step 12 - Comparing Four EBS Storage Types

IOPS = input output operations per second
Is the standard unit of measurement for the maximum number of reads and writes

I/O is the number of accesses to the disk
IOPS is I/O per second.
Throughput is the amount of info you read in each I/O

if you have a big mouth (big throughput), then you will need less bites and less I/O
Use cases:

Work loads -> usually General Purpose Volume
Databases -> usually IOPS (small data but frequently retrieved)
Big Data / Data warehouses -> usually Throughput ( big data files)
Cold HDD -> Cold File Servers (lowest IOPS before moving to Magnetic)

* Only gp2 and io1 can be used as boot volume


--------------- EBS SNAPSHOT------------------------------------

backup of EBS volume
volume can be modify
Volume type and size even it is attached with an EC2 instance

point-in-time snapshots (stored in S3) Aysnc process
Can't accessed directly from S3 but from EC2 API

Volumes -> Action -> Create snapshot
Can't add encryption here
We can create a volume from this snapshot as well and can add encryption as well

** Snapshots are incremental
You can create multiple snapshots of a volume snapshot1,snapshot2
but snapshot2 only have data after snapshot created and not the previous one
*** We can't loose data if we delete older snapshot
deleting snapshot only delete data which is not needed by other snapshots
snapshot can be shared with other accounts / public
max 100,000 snapshots per account
can make Images AMI from snapshot

EBS Migration
Volumes are constrained to  AZs
Snapshots created from those volumes are constrained to regionals
** so to move a volume to another Region, create snapshot of it
copy it to other region
create volume from this copied snapshots in that new region

Create a volume 
vol1  in eu-west-1a

Create snapshot from vol1
vol1-snapshot1

Select vol1-snapshot1 - Action - Copy

LifeCycle Manager (automated backup solution for EBS volumes) 
Schedule and manage creation and deletion of EBS snapshots
create snapshot lifecycle policy
schedule name:
ie after 24 hrs


Fast Snap restore 
eliminates need for pre-warming ie accessing data soon from the volume
Snapshot - Action -  Manage FastSnapshot restore

EBS Encryption

using AWS KMS ** AES-256

Turning on encryption automatically encrypts

Data at rest
data vols, boot vols and snapshots
Data in Transit
b/w EC2 and EBS
b/w EBS and EBS snapshots

Enable encryption at 
When EC2 instance is created you can 
When copy a snapshot 
when copy an AMI

When you create an encrypted EBS volume
data at rest is encrypted inside the volume
all data in flight moving b/w instance and vol is encrypted
all snapshots are encrypted
all volumes created from those snapshots are encrypted

Encryption has minimal impact on latency

How to encrypt an unencrypted volume
create EBS snapshot of this vol
Encrypt the snapshot using copy (in same region or in order region)
create new EBS vol from this snapshot (which is now encrypted)
attach this encrypted volume to the original instance


Getting faster I/O Performance b/w EC2 and EBS

1) Launch EC2 as EBS Optimised Instances
during instance creation

2) Enhanced networking through ENA Elastic Network Adapter
increase throughput
need custom configurations

3) using EFA Elastic Fabric Adapter
not available for windows
EFA= ENA + OD Bypass
High Performance Computing

EC2 Life Cycle

Hibernate  max 60 days
data in memory is persisted in EBS volume
only ebs backbend instances can be stopped or hibernated

 ----------EBS Raid Options -------------

RAID
redundant array of independent disks
raid is possible as long as your OS supports it

RAID 0 (to increase performance)
Higher IOPS or storage is required
combining 2 or more volumes and getting the total disk space 
When fault tolerance is not reburied
issue is data  can be lost if one disk fail
use when I/O performance is more important
Using this we can have a very big disk with lot of IOPS
eg. for a database which has already replication enabled

eg two 500 GB EBS io1 vol with 4000 IOPS can create
1000GB RAID 0 with available bandwidth 8000 IOPS and 100 MB/s throughput


RAID 1 (to increase fault tolerance)
when higher durability is required
data is duplicated as data write to both volumes called mirroring
use case: 
eg two 500 GB EBS io1 vol with 4000 IOPS can create
500GB RAID 1 with available bandwidth 4000 IOPS and 500 MB/s throughput

RAID 5 and RAID 6 is not recommended for EBS

We can create AMI from a snapshot of a root volume

-------- EBS SCENARIO-----------

1) use an AMI belonging to a different AWS account or in diff region
a) Owner of AMI provides read permission to AMI
b) for encrypted AMI, owner should share encryption keys
c)copy AMI to the other regions

If u don't have permissions to copy AMI but have permission to use it 
Sol:  
create EC2 instance from that AMI 
create new AMI from EC2 instance and copy it 

2) Can I attach EBS volume in us-east-1a to EC2 instance in us-east-1b
No, it should be in SAME AZ as of EC2 instance

3) Attach multiple EBS volume to an EC2 instance
Yes

4) Attach an EBS volume to two EC2 instances (at the same time)
No

5) Switch EBS vol from EC2 to another Ec2
Yes, detach and attach

6) Will an EBS volume be immediately available when attached to an EC2 instance ?
Yes, however , by default data is lazily loaded

7) How to endure EBS vol is deleted when EC2 is terminated
Enable delete on termination

8) retain EBS vol even if EC2 backed instance fail
On termination all data on root is lost even if EBS backed
so detach EBS vol before terminating the instance and recover data by connecting 
it to another eC2 instance
use snapshot

9) How to Create EBS volume from EBS volume in diff AZ in same region
create snapshot
create EBS volume from that snapshot and select diff AZ

10) How to Create EBS volume from EBS volume in diff Region 
take a snapshot
copy snapshot to other region
create EBS volume in other region

11) Lowest cost option to maintain snapshots with EBS
store just latest snapshot and delete others

12) how to encrypt and unencrypted EBS volume
can't do directly
create a snapshot from this volume
create vol from this snapshot with encryption

13) how to automate the complete lifecycle
creation, retention and deletion  of EBS snapshots
use EBS- Amazon Data LifeCycle Manager

--------------------------EFS--------------------------------------------------------

ELASTIC FILE SYSTEM
Network File System for Linux instances , POSIX filesystem
Can attach a EFS with multiple EC2 (may be in diff Az ) but in a single Region
petabyte scale , auto scaling shared file system
Highly available , scalable m expensive (3 X gp2), pay per use
** Compatible with Amazon EC2 LINUX based instances only
uses NFSv4.1 protocol
Uses SG to control access to EFS
Encryption at rest using KMS
use Max I/O Mode for higher throughput (with small latency) 
use case: home dirs, file share, content mgmt, media workflows

EFS -Performance and Storage Classes

EFS Scale
1000s of concurrent of NFS clients , 10GB/throughput
automatically grow , petabyte scale network file system

Performance Mode (set at EFS creation time)
General  purpose (default) , web server, CMS
Max.I/O higher latency, throughput, high parallel (big data , media processing)

Storage Tiers (lifecycle management feature- move file after n days)
standard: for frequently accessed files
(EFS-IA ) EFS Infrequent Access  : cost saving , cost to retrieve files , lower price to store


1) Amazon FSx Windows (File Server)
fully managed windows file system share drive
SMB service message block and NTFS protocol 
Microsoft AD integration
File system data is automatically encrypted at rest and in-transit
*All File sharing options are accessible on AWS or on premises
can be  configured to be Multi AZ (for HA)
Data is backed up daily to S3
build on SSD

2) AMAZON FSx FOR LUSTRE (Linux and cluster)
its a File system Optimised for Performance
** HPC high performance computing
machine learning, media processing , Financial modelling
** Seamless Integrates with S3
POSIX complicit
File system data is automatically encrypted at rest and in-transit
can be used from on premise servers


Console - EFS - Create File system
it is associated with a specific VPC

select Security group : EC2 Security Group
to all mount targets

life cycle policy = optional

Throughput Mode
Bursting Mode for most file system (scale with file system size)
Provisioned (for high throughput)

Performance Mode
General Purpose
Max I/O

File System Policy (optional)

Access Points
to provide application to access your filesystem

Sharing File System b/w EC2 instances

Edit EC2 Security Group for Inbound
NFS
Custom - EC2 Security Group (referenced)
ie referencing EC2 SG in EFS SG
thus allow NFS from all EC2 instances with this SG

Select EFS
Click Attach
Now use those commands and execute it on the EC2 machines

Mouting your File system (mounted your EC2 directory to the EFS)

on each EC2 instance
sudo yum install -y amazon-efs-utils
sudo mkdir efs
sudo mount -t efs fs-a440c755:/ efs
cd /efs
sudo touch firstEFsFile.txt

--------------------------------
Console --> FSX
use us-east-1
FSx for windows File server or FSx for Lustre


Make Optimum Use of Resources in The Cloud
Terminate EC2 instances
Delete all unused EBS volumes, snapshots
Delete all your AMIs
Delete your EFS file storage servers


----------------EBS VS EFS ----------------------------------
** EBS is mount to single AZ, attached to one instance at a time
** EFS is mount to multiple AZ
In EBS for auto scaling , you need to provisioned disk and charge for it
In EFS just add files and charged for those files like S3

-----------------------Storage Gateway -------------------------------------------------
Hybrid Storage  (On Premise and on Cloud )

part of infra is on the cloud
part of infra is on on-premise

this can be due to
long cloud migration
security and compliance requirements

Storage Gateway is the Bridge b/w on-primise and cloud data in S3
unlimited storage with good performance
Storage Gateway and S3 glacier encrypt data by default

3 types of Storage Gateway
1) *Storage File Gateway
2) *Storage Tape Gateway
3) *Storage Volume Gateway

VM Image with storage gateway software deployed on-premises

1)  File Gateway

** Store files as object in S3 with a local cache for low latency
File gateway deployed as VM on premises

* maintains a local cache with most recently used objects
** File share (NFS or SMB)  + It benefits from S3 features and integrations
* Configured S3 buckets are accessible using NFS and SMB protocol
Bucket access using IAM roles for each File Gateway
can be mounted on many servers
application feels that they are accessing file system locally but it was S3 using FGW

2) Volume Gateway
move block storage to cloud
reduce cost
mostly for backup and DR
migration of application data
** Block storage using iSCSI protocol backed by S3
backed by EBS snapshots which can help restore on-premise volumes

Cached volumes
**  primary data stored at AWS S3, low latency access to most recent data
on premise cache store frequently accessed data

Stored Volume
High Performance
** Primary data (entire dataset) store at On premise
async copy to AWS
stored as EBS snapshots
for DR and restore EBS volumes

3) AWS Storage Tape Gateway
used for archives
**backup data using existing tape based processes using iSCI
avoid physical tape backup manual process
no need to change tape backup infrastructure
backup data to virtual tapes ie S3 and glacier 
**VTL Virtual Tape Library backed by S3 and Glacier

S3 life cycle mgmt


scenarios: want to use an AMI belonging to a diff AWS account or a diff Region
AMI are restricted to a region


File Storage used for HPC High performance computing  is Amazon FSx for Lustre


File gateway- Hardware Appliance
** helpful for daily NFS backups in small data centres
--------------------------------------------------------------
 Moving Data b/w AWS and on-premises
data migration

S3 transfer Acceleration
when transferring less data up to few TB
basic option
uses cloudFront edge locations
Enable S3 transfer acceleration and use endpoints

AWS Snowball
transfer dozes of TB to Petabyte from on-premises
physical shipping
KMS 256 bit encryption
Large data cloud migration
100TB  (80 TB usable)per appliance
all data is automatically encrypted
choose snowball if data transfer takes more than a week based on your network connection
eg. 5TB can be transferred on 100Mbpc line in a week at 80%utilization
request the snowball from console
install snowball client on your servers
copy file using client
ship back device
data loaded in S3 and snowball is completely wiped

Snowball Edge
add computational capability to the device
compute optimised / storage optimized
supports custom lambda function
supports a custom EC2 AMI so you can perform processing on the go
use case: pre-process the data while moving


AWS Snowmobile (truck)
peta byte of data
** 100 PB storage per truck
data is automatically encrypted with KMS (AES-256)
1 EB = 1000 PB = 1000,000 TB
use case: when to trasfer more than 10 PB

Snowball into Glacier
Not directly
First import into S3 and then use S3 lifecycle policy

AWS DataSync 
Transfer file storage to cloud
secure
10 X faster of TB to/from AWS over internet or AWS direct connect
transfer from on premise file storage (NFS,SMB) to S3, FRx
Integration with AWS storage Gateway for ongoing update
use case: Data Migration,replication and clod data archival


Alternatively, use S3 transfer acceleration if apps integrated with S3 AP1 

-------------------------------------------------------